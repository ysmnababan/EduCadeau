// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.27.1
// source: proto/registry_rest.proto

package pbRegistryRest

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// for get all registries
type AllReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filter  string `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	DonorId uint64 `protobuf:"varint,2,opt,name=donor_id,json=donorId,proto3" json:"donor_id,omitempty"`
}

func (x *AllReq) Reset() {
	*x = AllReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_registry_rest_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllReq) ProtoMessage() {}

func (x *AllReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_registry_rest_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllReq.ProtoReflect.Descriptor instead.
func (*AllReq) Descriptor() ([]byte, []int) {
	return file_proto_registry_rest_proto_rawDescGZIP(), []int{0}
}

func (x *AllReq) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

func (x *AllReq) GetDonorId() uint64 {
	if x != nil {
		return x.DonorId
	}
	return 0
}

type RegistriesResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*RegistryResp `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *RegistriesResp) Reset() {
	*x = RegistriesResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_registry_rest_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegistriesResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegistriesResp) ProtoMessage() {}

func (x *RegistriesResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_registry_rest_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegistriesResp.ProtoReflect.Descriptor instead.
func (*RegistriesResp) Descriptor() ([]byte, []int) {
	return file_proto_registry_rest_proto_rawDescGZIP(), []int{1}
}

func (x *RegistriesResp) GetList() []*RegistryResp {
	if x != nil {
		return x.List
	}
	return nil
}

type RegistryResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RegistryId string  `protobuf:"bytes,1,opt,name=registry_id,json=registryId,proto3" json:"registry_id,omitempty"`
	DonationId string  `protobuf:"bytes,2,opt,name=donation_id,json=donationId,proto3" json:"donation_id,omitempty"`
	DonorId    uint64  `protobuf:"varint,3,opt,name=donor_id,json=donorId,proto3" json:"donor_id,omitempty"`
	Amount     float64 `protobuf:"fixed64,4,opt,name=amount,proto3" json:"amount,omitempty"`
	Status     string  `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *RegistryResp) Reset() {
	*x = RegistryResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_registry_rest_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegistryResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegistryResp) ProtoMessage() {}

func (x *RegistryResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_registry_rest_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegistryResp.ProtoReflect.Descriptor instead.
func (*RegistryResp) Descriptor() ([]byte, []int) {
	return file_proto_registry_rest_proto_rawDescGZIP(), []int{2}
}

func (x *RegistryResp) GetRegistryId() string {
	if x != nil {
		return x.RegistryId
	}
	return ""
}

func (x *RegistryResp) GetDonationId() string {
	if x != nil {
		return x.DonationId
	}
	return ""
}

func (x *RegistryResp) GetDonorId() uint64 {
	if x != nil {
		return x.DonorId
	}
	return 0
}

func (x *RegistryResp) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *RegistryResp) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

// for get registry id
type GetRegistryReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RegistryId string `protobuf:"bytes,1,opt,name=registry_id,json=registryId,proto3" json:"registry_id,omitempty"`
	DonorId    uint64 `protobuf:"varint,2,opt,name=donor_id,json=donorId,proto3" json:"donor_id,omitempty"`
}

func (x *GetRegistryReq) Reset() {
	*x = GetRegistryReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_registry_rest_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRegistryReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRegistryReq) ProtoMessage() {}

func (x *GetRegistryReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_registry_rest_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRegistryReq.ProtoReflect.Descriptor instead.
func (*GetRegistryReq) Descriptor() ([]byte, []int) {
	return file_proto_registry_rest_proto_rawDescGZIP(), []int{3}
}

func (x *GetRegistryReq) GetRegistryId() string {
	if x != nil {
		return x.RegistryId
	}
	return ""
}

func (x *GetRegistryReq) GetDonorId() uint64 {
	if x != nil {
		return x.DonorId
	}
	return 0
}

type DetailRegistryResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RegistryId    string  `protobuf:"bytes,1,opt,name=registry_id,json=registryId,proto3" json:"registry_id,omitempty"`
	DonationId    string  `protobuf:"bytes,2,opt,name=donation_id,json=donationId,proto3" json:"donation_id,omitempty"`
	DonorId       uint64  `protobuf:"varint,3,opt,name=donor_id,json=donorId,proto3" json:"donor_id,omitempty"`
	Amount        float64 `protobuf:"fixed64,4,opt,name=amount,proto3" json:"amount,omitempty"`
	Status        string  `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
	DonationName  string  `protobuf:"bytes,6,opt,name=donation_name,json=donationName,proto3" json:"donation_name,omitempty"`
	Description   string  `protobuf:"bytes,7,opt,name=description,proto3" json:"description,omitempty"`
	AmountToPay   float64 `protobuf:"fixed64,8,opt,name=amount_to_pay,json=amountToPay,proto3" json:"amount_to_pay,omitempty"`
	RecipientId   uint64  `protobuf:"varint,9,opt,name=recipient_id,json=recipientId,proto3" json:"recipient_id,omitempty"`
	RecipientName string  `protobuf:"bytes,10,opt,name=recipient_name,json=recipientName,proto3" json:"recipient_name,omitempty"`
}

func (x *DetailRegistryResp) Reset() {
	*x = DetailRegistryResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_registry_rest_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DetailRegistryResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetailRegistryResp) ProtoMessage() {}

func (x *DetailRegistryResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_registry_rest_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetailRegistryResp.ProtoReflect.Descriptor instead.
func (*DetailRegistryResp) Descriptor() ([]byte, []int) {
	return file_proto_registry_rest_proto_rawDescGZIP(), []int{4}
}

func (x *DetailRegistryResp) GetRegistryId() string {
	if x != nil {
		return x.RegistryId
	}
	return ""
}

func (x *DetailRegistryResp) GetDonationId() string {
	if x != nil {
		return x.DonationId
	}
	return ""
}

func (x *DetailRegistryResp) GetDonorId() uint64 {
	if x != nil {
		return x.DonorId
	}
	return 0
}

func (x *DetailRegistryResp) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *DetailRegistryResp) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *DetailRegistryResp) GetDonationName() string {
	if x != nil {
		return x.DonationName
	}
	return ""
}

func (x *DetailRegistryResp) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *DetailRegistryResp) GetAmountToPay() float64 {
	if x != nil {
		return x.AmountToPay
	}
	return 0
}

func (x *DetailRegistryResp) GetRecipientId() uint64 {
	if x != nil {
		return x.RecipientId
	}
	return 0
}

func (x *DetailRegistryResp) GetRecipientName() string {
	if x != nil {
		return x.RecipientName
	}
	return ""
}

// for donate
type DonationReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DonationId string  `protobuf:"bytes,1,opt,name=donation_id,json=donationId,proto3" json:"donation_id,omitempty"`
	Filter     string  `protobuf:"bytes,2,opt,name=filter,proto3" json:"filter,omitempty"`
	DonorId    uint64  `protobuf:"varint,3,opt,name=donor_id,json=donorId,proto3" json:"donor_id,omitempty"`
	Amount     float64 `protobuf:"fixed64,4,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *DonationReq) Reset() {
	*x = DonationReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_registry_rest_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DonationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DonationReq) ProtoMessage() {}

func (x *DonationReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_registry_rest_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DonationReq.ProtoReflect.Descriptor instead.
func (*DonationReq) Descriptor() ([]byte, []int) {
	return file_proto_registry_rest_proto_rawDescGZIP(), []int{5}
}

func (x *DonationReq) GetDonationId() string {
	if x != nil {
		return x.DonationId
	}
	return ""
}

func (x *DonationReq) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

func (x *DonationReq) GetDonorId() uint64 {
	if x != nil {
		return x.DonorId
	}
	return 0
}

func (x *DonationReq) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type DonateResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RegistryId string  `protobuf:"bytes,1,opt,name=registry_id,json=registryId,proto3" json:"registry_id,omitempty"`
	DonationId string  `protobuf:"bytes,2,opt,name=donation_id,json=donationId,proto3" json:"donation_id,omitempty"`
	DonorId    uint64  `protobuf:"varint,3,opt,name=donor_id,json=donorId,proto3" json:"donor_id,omitempty"`
	Amount     float64 `protobuf:"fixed64,4,opt,name=amount,proto3" json:"amount,omitempty"`
	Status     string  `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *DonateResp) Reset() {
	*x = DonateResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_registry_rest_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DonateResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DonateResp) ProtoMessage() {}

func (x *DonateResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_registry_rest_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DonateResp.ProtoReflect.Descriptor instead.
func (*DonateResp) Descriptor() ([]byte, []int) {
	return file_proto_registry_rest_proto_rawDescGZIP(), []int{6}
}

func (x *DonateResp) GetRegistryId() string {
	if x != nil {
		return x.RegistryId
	}
	return ""
}

func (x *DonateResp) GetDonationId() string {
	if x != nil {
		return x.DonationId
	}
	return ""
}

func (x *DonateResp) GetDonorId() uint64 {
	if x != nil {
		return x.DonorId
	}
	return 0
}

func (x *DonateResp) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *DonateResp) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type DeleteRegistryReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RegistryId string `protobuf:"bytes,1,opt,name=registry_id,json=registryId,proto3" json:"registry_id,omitempty"`
	DonorId    uint64 `protobuf:"varint,2,opt,name=donor_id,json=donorId,proto3" json:"donor_id,omitempty"`
}

func (x *DeleteRegistryReq) Reset() {
	*x = DeleteRegistryReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_registry_rest_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRegistryReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRegistryReq) ProtoMessage() {}

func (x *DeleteRegistryReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_registry_rest_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRegistryReq.ProtoReflect.Descriptor instead.
func (*DeleteRegistryReq) Descriptor() ([]byte, []int) {
	return file_proto_registry_rest_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteRegistryReq) GetRegistryId() string {
	if x != nil {
		return x.RegistryId
	}
	return ""
}

func (x *DeleteRegistryReq) GetDonorId() uint64 {
	if x != nil {
		return x.DonorId
	}
	return 0
}

type DeleteResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *DeleteResp) Reset() {
	*x = DeleteResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_registry_rest_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteResp) ProtoMessage() {}

func (x *DeleteResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_registry_rest_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteResp.ProtoReflect.Descriptor instead.
func (*DeleteResp) Descriptor() ([]byte, []int) {
	return file_proto_registry_rest_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_proto_registry_rest_proto protoreflect.FileDescriptor

var file_proto_registry_rest_proto_rawDesc = []byte{
	0x0a, 0x19, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79,
	0x5f, 0x72, 0x65, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x72, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x72, 0x79, 0x22, 0x3b, 0x0a, 0x06, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x12,
	0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x64, 0x6f, 0x6e, 0x6f, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x64, 0x6f, 0x6e, 0x6f, 0x72,
	0x49, 0x64, 0x22, 0x3c, 0x0a, 0x0e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x69, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x2a, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x22, 0x9b, 0x01, 0x0a, 0x0c, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79,
	0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x6f, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x6f, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x64, 0x6f, 0x6e, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x64, 0x6f, 0x6e, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x4c,
	0x0a, 0x0e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71,
	0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x49,
	0x64, 0x12, 0x19, 0x0a, 0x08, 0x64, 0x6f, 0x6e, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x07, 0x64, 0x6f, 0x6e, 0x6f, 0x72, 0x49, 0x64, 0x22, 0xd6, 0x02, 0x0a,
	0x12, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x72, 0x79, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x6f, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x6f, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x64, 0x6f, 0x6e, 0x6f, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x64, 0x6f, 0x6e, 0x6f, 0x72, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x23, 0x0a, 0x0d, 0x64, 0x6f, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x6f, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0d, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x5f, 0x74, 0x6f, 0x5f, 0x70, 0x61, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x6f, 0x50, 0x61, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x72,
	0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0b, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x25,
	0x0a, 0x0e, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x79, 0x0a, 0x0b, 0x44, 0x6f, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x6f, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x6f, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x19, 0x0a,
	0x08, 0x64, 0x6f, 0x6e, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x07, 0x64, 0x6f, 0x6e, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x22, 0x99, 0x01, 0x0a, 0x0a, 0x44, 0x6f, 0x6e, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x49, 0x64,
	0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x6f, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x6f, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x19, 0x0a, 0x08, 0x64, 0x6f, 0x6e, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x07, 0x64, 0x6f, 0x6e, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x4f, 0x0a, 0x11,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x52, 0x65,
	0x71, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79,
	0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x64, 0x6f, 0x6e, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x64, 0x6f, 0x6e, 0x6f, 0x72, 0x49, 0x64, 0x22, 0x26, 0x0a,
	0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x32, 0x93, 0x02, 0x0a, 0x0c, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x72, 0x79, 0x52, 0x65, 0x73, 0x74, 0x12, 0x3e, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x69, 0x65, 0x73, 0x12, 0x10, 0x2e, 0x72, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x72,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x69,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x47, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x72, 0x79, 0x49, 0x44, 0x12, 0x18, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x72, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x52, 0x65,
	0x71, 0x1a, 0x1c, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x35, 0x0a, 0x06, 0x44, 0x6f, 0x6e, 0x61, 0x74, 0x65, 0x12, 0x15, 0x2e, 0x72, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x72, 0x79, 0x2e, 0x44, 0x6f, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x1a, 0x14, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x44, 0x6f, 0x6e, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x43, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x12, 0x1b, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x72, 0x79, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x72, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x42, 0x14, 0x5a, 0x12, 0x2f,
	0x70, 0x62, 0x2f, 0x70, 0x62, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x52, 0x65, 0x73,
	0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_registry_rest_proto_rawDescOnce sync.Once
	file_proto_registry_rest_proto_rawDescData = file_proto_registry_rest_proto_rawDesc
)

func file_proto_registry_rest_proto_rawDescGZIP() []byte {
	file_proto_registry_rest_proto_rawDescOnce.Do(func() {
		file_proto_registry_rest_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_registry_rest_proto_rawDescData)
	})
	return file_proto_registry_rest_proto_rawDescData
}

var file_proto_registry_rest_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_proto_registry_rest_proto_goTypes = []any{
	(*AllReq)(nil),             // 0: registry.AllReq
	(*RegistriesResp)(nil),     // 1: registry.RegistriesResp
	(*RegistryResp)(nil),       // 2: registry.RegistryResp
	(*GetRegistryReq)(nil),     // 3: registry.GetRegistryReq
	(*DetailRegistryResp)(nil), // 4: registry.DetailRegistryResp
	(*DonationReq)(nil),        // 5: registry.DonationReq
	(*DonateResp)(nil),         // 6: registry.DonateResp
	(*DeleteRegistryReq)(nil),  // 7: registry.DeleteRegistryReq
	(*DeleteResp)(nil),         // 8: registry.DeleteResp
}
var file_proto_registry_rest_proto_depIdxs = []int32{
	2, // 0: registry.RegistriesResp.list:type_name -> registry.RegistryResp
	0, // 1: registry.RegistryRest.GetAllRegistries:input_type -> registry.AllReq
	3, // 2: registry.RegistryRest.GetRegistryID:input_type -> registry.GetRegistryReq
	5, // 3: registry.RegistryRest.Donate:input_type -> registry.DonationReq
	7, // 4: registry.RegistryRest.DeleteRegistry:input_type -> registry.DeleteRegistryReq
	1, // 5: registry.RegistryRest.GetAllRegistries:output_type -> registry.RegistriesResp
	4, // 6: registry.RegistryRest.GetRegistryID:output_type -> registry.DetailRegistryResp
	6, // 7: registry.RegistryRest.Donate:output_type -> registry.DonateResp
	8, // 8: registry.RegistryRest.DeleteRegistry:output_type -> registry.DeleteResp
	5, // [5:9] is the sub-list for method output_type
	1, // [1:5] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_proto_registry_rest_proto_init() }
func file_proto_registry_rest_proto_init() {
	if File_proto_registry_rest_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_registry_rest_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*AllReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_registry_rest_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*RegistriesResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_registry_rest_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*RegistryResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_registry_rest_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*GetRegistryReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_registry_rest_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*DetailRegistryResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_registry_rest_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*DonationReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_registry_rest_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*DonateResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_registry_rest_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteRegistryReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_registry_rest_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_registry_rest_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_registry_rest_proto_goTypes,
		DependencyIndexes: file_proto_registry_rest_proto_depIdxs,
		MessageInfos:      file_proto_registry_rest_proto_msgTypes,
	}.Build()
	File_proto_registry_rest_proto = out.File
	file_proto_registry_rest_proto_rawDesc = nil
	file_proto_registry_rest_proto_goTypes = nil
	file_proto_registry_rest_proto_depIdxs = nil
}
