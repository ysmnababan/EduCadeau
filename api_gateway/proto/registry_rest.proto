syntax = "proto3";
package registry;
option go_package = "/pb/pbRegistryRest";

service RegistryRest{
    rpc GetAllRegistries(AllReq) returns (RegistriesResp);
    rpc GetRegistryID (GetRegistryReq) returns (DetailRegistryResp);
    rpc Donate (DonationReq) returns (DonateResp);
    rpc DeleteRegistry (DeleteRegistryReq) returns (DeleteResp);

    rpc GetAllPayments(PaymentsReq) returns (PaymentList);
    rpc GetPayment(PaymentReq) returns (PaymentResp);
    rpc Pay(PayReq) returns (PaymentResp);
}


// for get all registries
message AllReq {
    string filter = 1;
    uint64 donor_id = 2;
}

message RegistriesResp {
    repeated RegistryResp list = 1;
}
message RegistryResp {
    string registry_id = 1;
    string donation_id = 2;
    uint64 donor_id = 3;
    double amount = 4;
    string status = 5;
}

// for get registry id
message GetRegistryReq {
    string registry_id = 1;
    uint64 donor_id = 2;
}

message DetailRegistryResp {
    string registry_id = 1;
    string donation_id = 2;
    uint64 donor_id = 3;
    double amount = 4;
    string status = 5;
    string donation_name = 6;
    string description = 7;
    double amount_to_pay = 8;
    uint64 recipient_id = 9;
    string recipient_name = 10;
}

// for donate 
message DonationReq {
    string donation_id = 1;
    string filter = 2;
    uint64 donor_id = 3;
    double amount =4;
}

message DonateResp{
    string registry_id = 1;
    string donation_id = 2;
    uint64 donor_id = 3;
    double amount = 4;
    string status = 5;
}

// for delete
message DeleteRegistryReq{
    string registry_id = 1;
    uint64 donor_id = 2;
}

message DeleteResp{
    string message = 1;
}

// for get all payments
message PaymentsReq {
    uint64 donor_id = 1;
}

message PaymentList{
    repeated PaymentResp list =1;
}


// for get payment
message PaymentReq {
    uint64 donor_id = 1;
    string payment_id = 2;
}

message PaymentResp {
    string payment_id = 1;
    string registry_id = 2;
    string payment_date = 3;
    string payment_method = 4;
    double payment_amount = 5;
    string invoice_link = 6;
}

// for Pay
message PayReq {
    string registry_id = 1;
    uint64 donor_id = 2;
    string payment_method = 3;
}

// message Payresp {
//     string payment_id = 1;
//     string registry_id = 2;
//     string payment_date = 3;
//     string payment_method = 4;
//     double payment_amount = 5;
// }